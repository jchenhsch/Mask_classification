{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww20920\viewh9580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 May 11th, 2022\
Machine Learning project\
Name: Jiaxuan Chen\
\
Project:  Mask Detection via TensorFlow CNN\
\
Running/Testing instruction: image_proj.py  is sufficient to execute all tasks, all other python scripts are auxiliary files.\
\
Directory:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\sl312\slmult1\pardirnatural\partightenfactor0
\cf0 \
Data\'97\'97\'97\
          \'97\'97\'97raw_data (dataset 1 contains around 1000 images with mixed labels )\
                    \'97\'97\'97 full_annotations: contains whole datasets images\'92 labels and binding boxes for faces information in XML files\
                    \'97\'97\'97 full_images: contains images with both masked and unmasked\
                    \'97\'97\'97 test annotations: the subset of full_annotations to generate xml_df image data frame in the xml_parsing.py for testing the image classifier trained\
                    \'97\'97\'97 test images: the subset of full_images to generate xml_df image data frame in the xml_parsing.py for testing the image classifier trained\
          \
          \'97\'97\'97stratified_data (dataset 2 that contains around 7000 images with distinct labels)\
                    \'97\'97\'97  full_data: contains whole dataset images with distinct labels\
                                \'97\'97\'97 with_mask: images with people wearing masks (subfolder with_mask_train isolate the train images with test_Images to prevent test_data_generator.py\
                                            Grabbing test images from the train images)\
                                \'97\'97\'97 without_mask: images with people not wearing masks (subfolder without_mask_train isolate the train images with test_Images to prevent test_data_generator.py\
                                            Grabbing test images from the train images)\
                    \'97\'97\'97 test_data: contains mixed label images grabbing from full_data subfolders using test_data_generator.py\
\
                    \'97\'97\'97 train_data: contains subfolders with_mask and without_mask which are subsets of images in the full_data folder. These data are used for training the CNN model in the image\
                                                 project.py\
                               \'97\'97\'97 with_mask: images with people wearing masks ( a subset of with_mask in full data)\
                               \'97\'97\'97 without_mask: images with people not wearing masks (a subset of without_mask in full data)\
Description file\'97\'97\'97-\
                     \'97\'97\'97 readme.rtf: this file \
                     \'97\'97\'97  test_accuracy_output.rtf: contain the testing accuracy for the raw dataset and the stratified dataset.\
                     \'97\'97\'97 proposal.pdf: an overview of the final goal for this project: OpenCV live mask detection\
                     \'97\'97\'97 final_project_report.pdf: a report on the current progress of the project and results\
\
Python Scripts\'97\'97\'97\
                    \'97\'97\'97image_load.py: load the images and preprocess the image as a standardized NumPy array. From there, we append the array in the xml_parsing\
\
                    \'97\'97\'97xml_parsing.py: output a panda data frame that contains the label, filename, NumPy array from image_load, and the binding boxes which will be used in the OpenCV live \
                                                         Detection.  The output xml_df will be used in the image_proj.py to test the generalization ability across different image datasets for the trained\
                                                         CNN image classifier\
\
                    \'97\'97\'97test_data_generator.py: grab images from the full stratified dataset folder and copy them into the test_data folder and generate a panda data frame\
                                                          which will be used in the image_project.py for testing the generalization ability within the same image datasets for the trained CNN image classifier\
\
                    \'97\'97\'97image_proj.py:\
                                                         \'97\'97Main console file we train the CNN model which uses image_dataset_from_directory to grab training images from train_data subfolders (stratified dataset).\
                                                         \'97\'97 perform same dataset accuracy testing(stratified dataset testing) and different dataset accuracy testing(raw dataset testing) \
                                                         \'97\'97 find_the_best_hyperparameter function finds the best dense_unit (50 according to my output) \
 \
Future work:\
                   1. Fixing the test_datasets low accuracy problem (test_accuracy might not load properly leads to very low testing accuracies)\
                   \
                   2. Come up with an additional batch_size test to find the better batch size for the model\
                  \
                   3. If both succeeded, try the live mask detection using the OpenCV module. \
\
\
\
\
\
                                             \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0          \
}